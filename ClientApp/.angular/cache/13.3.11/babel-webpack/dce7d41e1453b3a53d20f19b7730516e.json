{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CustomerDto } from 'src/app/DTO/CustomerDTO';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/customers.service\";\nimport * as i3 from \"@angular/forms\"; // Import the Customer class from the appropriate file\n\nexport let CustomerFormComponent = /*#__PURE__*/(() => {\n  class CustomerFormComponent {\n    constructor(route, customerService, router) {\n      this.route = route;\n      this.customerService = customerService;\n      this.router = router;\n      this.formSubmit = new EventEmitter();\n      this.customerForm = new FormGroup({\n        firstName: new FormControl(''),\n        lastName: new FormControl(''),\n        email: new FormControl(''),\n        phoneNumber: new FormControl(''),\n        countryCode: new FormControl(''),\n        gender: new FormControl(''),\n        balance: new FormControl(''),\n        firstNameAscii: new FormControl(''),\n        lastNameAscii: new FormControl(''),\n        initials: new FormControl(''),\n        countryCodeAlpha: new FormControl(''),\n        countryName: new FormControl(''),\n        currency: new FormControl(''),\n        firstNameCountryFrequency: new FormControl(''),\n        firstNameCountryRank: new FormControl(''),\n        lastNameCountryFrequency: new FormControl(''),\n        lastNameCountryRank: new FormControl(''),\n        password: new FormControl(''),\n        primaryLanguage: new FormControl(''),\n        primaryLanguageCode: new FormControl(''),\n        salutation: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      this.id = Number(this.route.snapshot.paramMap.get('id'));\n      this.isAddCustomer = this.id === 0;\n\n      if (!isNaN(this.id) && this.id > 0) {\n        this.customerService.getCustomer(this.id).subscribe(customer => {\n          this.customerForm.setValue({\n            firstName: customer.firstname || '',\n            lastName: customer.lastname || '',\n            email: customer.email || '',\n            phoneNumber: customer.phone_Number || '',\n            countryCode: customer.country_code || '',\n            gender: customer.gender || '',\n            balance: customer.balance || 0,\n            firstNameAscii: customer.firstname_ascii || '',\n            lastNameAscii: customer.lastname_ascii || '',\n            initials: customer.initials || '',\n            countryCodeAlpha: customer.country_code_alpha || '',\n            countryName: customer.country_name || '',\n            currency: customer.currency || '',\n            firstNameCountryFrequency: customer.firstname_country_frequency || '',\n            firstNameCountryRank: customer.firstname_country_rank || '',\n            lastNameCountryFrequency: customer.lastname_country_frequency || '',\n            lastNameCountryRank: customer.lastname_country_rank || '',\n            password: customer.password || '',\n            primaryLanguage: customer.primary_language || '',\n            primaryLanguageCode: customer.primary_language_code || '',\n            salutation: customer.salutation || ''\n          });\n        });\n      }\n    }\n\n    onSubmit() {\n      // TODO: Use EventEmitter with form value to update the parent component\n      // const defaultCustomer = {\n      //   country_code: 'US',\n      //   country_code_alpha: 'USA',\n      //   country_name: 'United States',\n      //   currency: 'USD',\n      //   firstname_ascii: 'John',\n      //   firstname_country_frequency: '5',\n      //   firstname_country_rank: '1',\n      //   id: '0',\n      //   initials: 'JD',\n      //   lastname_ascii: 'Doe',\n      //   lastname_country_frequency: '5',\n      //   lastname_country_rank: '1',\n      //   password: 'password',\n      //   primary_language: 'English',\n      //   primary_language_code: 'EN',\n      //   salutation: 'Mr.',\n      //   // Add other fields as necessary\n      // };\n      console.log(this.customerForm.value);\n\n      if (this.id === 0) {\n        //const customer =this.customerForm.value;\n        this.customerService.getCustomers().subscribe(customers => {\n          // Find the customer with the highest id\n          const highestId = Math.max(...customers.map(customer => customer.id)); // Add 1 to the highest id to get a unique id\n\n          const uniqueId = highestId + 1;\n          console.log('uniqueId ', uniqueId.toString()); // Create a new customer\n\n          const customerDto = new CustomerDto(this.customerForm, uniqueId.toString());\n          this.customerService.createCustomer(customerDto).subscribe(res => {\n            console.log('Customer created:', res); // this.customerService.createNewCustomerList().subscribe((res) => {\n            //   console.log('Customer list updated:', res);\n\n            this.router.navigate(['/customer']); // });\n          }, error => {\n            console.error('Error creating customer:', error);\n          });\n        });\n      } else {\n        const customerDto = new CustomerDto(this.customerForm, this.id.toString());\n        this.customerService.updateCustomer(this.id, customerDto).subscribe(res => {\n          console.log('Customer updated:', res);\n          this.router.navigate(['/customer']);\n        });\n      }\n    }\n\n  }\n\n  CustomerFormComponent.ɵfac = function CustomerFormComponent_Factory(t) {\n    return new (t || CustomerFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CustomersService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  CustomerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomerFormComponent,\n    selectors: [[\"app-customer-form\"]],\n    outputs: {\n      formSubmit: \"formSubmit\"\n    },\n    decls: 135,\n    vars: 1,\n    consts: [[\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"id\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\", \"required\", \"\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"type\", \"tel\", \"formControlName\", \"phoneNumber\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"countryCode\"], [\"id\", \"countryCode\", \"type\", \"text\", \"formControlName\", \"countryCode\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"formControlName\", \"gender\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"m\"], [\"value\", \"f\"], [\"for\", \"balance\"], [\"id\", \"balance\", \"type\", \"number\", \"formControlName\", \"balance\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"firstNameAscii\"], [\"id\", \"firstNameAscii\", \"type\", \"text\", \"formControlName\", \"firstNameAscii\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"lastNameAscii\"], [\"id\", \"lastNameAscii\", \"type\", \"text\", \"formControlName\", \"lastNameAscii\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"initials\"], [\"id\", \"initials\", \"type\", \"text\", \"formControlName\", \"initials\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"countryCodeAlpha\"], [\"id\", \"countryCodeAlpha\", \"type\", \"text\", \"formControlName\", \"countryCodeAlpha\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"countryName\"], [\"id\", \"countryName\", \"type\", \"text\", \"formControlName\", \"countryName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"currency\"], [\"id\", \"currency\", \"type\", \"text\", \"formControlName\", \"currency\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"firstNameCountryFrequency\"], [\"id\", \"firstNameCountryFrequency\", \"type\", \"text\", \"formControlName\", \"firstNameCountryFrequency\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"firstNameCountryRank\"], [\"id\", \"firstNameCountryRank\", \"type\", \"text\", \"formControlName\", \"firstNameCountryRank\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"lastNameCountryFrequency\"], [\"id\", \"lastNameCountryFrequency\", \"type\", \"text\", \"formControlName\", \"lastNameCountryFrequency\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"lastNameCountryRank\"], [\"id\", \"lastNameCountryRank\", \"type\", \"text\", \"formControlName\", \"lastNameCountryRank\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"primaryLanguage\"], [\"id\", \"primaryLanguage\", \"type\", \"text\", \"formControlName\", \"primaryLanguage\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"primaryLanguageCode\"], [\"id\", \"primaryLanguageCode\", \"type\", \"text\", \"formControlName\", \"primaryLanguageCode\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"salutation\"], [\"id\", \"salutation\", \"type\", \"text\", \"formControlName\", \"salutation\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function CustomerFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"customer-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CustomerFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵtext(8, \"Please enter your first name.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵtext(14, \"Please enter your last name.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementStart(19, \"div\", 4);\n        i0.ɵɵtext(20, \"Please enter a valid email address.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"label\", 9);\n        i0.ɵɵtext(23, \"Phone Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 10);\n        i0.ɵɵelementStart(25, \"div\", 4);\n        i0.ɵɵtext(26, \"Please enter your phone number.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 11);\n        i0.ɵɵtext(29, \"Country Code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵelementStart(31, \"div\", 4);\n        i0.ɵɵtext(32, \"Please enter the country code.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 1)(34, \"label\", 13);\n        i0.ɵɵtext(35, \"Gender:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"select\", 14)(37, \"option\", 15);\n        i0.ɵɵtext(38, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 16);\n        i0.ɵɵtext(40, \"Female\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 4);\n        i0.ɵɵtext(42, \"Please select your gender.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 1)(44, \"label\", 17);\n        i0.ɵɵtext(45, \"Balance:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"input\", 18);\n        i0.ɵɵelementStart(47, \"div\", 4);\n        i0.ɵɵtext(48, \"Please enter your balance.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"div\", 1)(50, \"label\", 19);\n        i0.ɵɵtext(51, \"First Name ASCII:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 20);\n        i0.ɵɵelementStart(53, \"div\", 4);\n        i0.ɵɵtext(54, \"Please enter the ASCII representation of your first name.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 1)(56, \"label\", 21);\n        i0.ɵɵtext(57, \"Last Name ASCII:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"input\", 22);\n        i0.ɵɵelementStart(59, \"div\", 4);\n        i0.ɵɵtext(60, \"Please enter the ASCII representation of your last name.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 1)(62, \"label\", 23);\n        i0.ɵɵtext(63, \"Initials:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(64, \"input\", 24);\n        i0.ɵɵelementStart(65, \"div\", 4);\n        i0.ɵɵtext(66, \"Please enter your initials.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(67, \"div\", 1)(68, \"label\", 25);\n        i0.ɵɵtext(69, \"Country Code Alpha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(70, \"input\", 26);\n        i0.ɵɵelementStart(71, \"div\", 4);\n        i0.ɵɵtext(72, \"Please enter the alpha representation of the country code.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(73, \"div\", 1)(74, \"label\", 27);\n        i0.ɵɵtext(75, \"Country Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(76, \"input\", 28);\n        i0.ɵɵelementStart(77, \"div\", 4);\n        i0.ɵɵtext(78, \"Please enter the country name.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(79, \"div\", 1)(80, \"label\", 29);\n        i0.ɵɵtext(81, \"Currency:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(82, \"input\", 30);\n        i0.ɵɵelementStart(83, \"div\", 4);\n        i0.ɵɵtext(84, \"Please enter the currency.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(85, \"div\", 1)(86, \"label\", 31);\n        i0.ɵɵtext(87, \"First Name Country Frequency:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(88, \"input\", 32);\n        i0.ɵɵelementStart(89, \"div\", 4);\n        i0.ɵɵtext(90, \"Please enter the frequency of your first name in the country.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(91, \"div\", 1)(92, \"label\", 33);\n        i0.ɵɵtext(93, \"First Name Country Rank:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(94, \"input\", 34);\n        i0.ɵɵelementStart(95, \"div\", 4);\n        i0.ɵɵtext(96, \"Please enter the rank of your first name in the country.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(97, \"div\", 1)(98, \"label\", 35);\n        i0.ɵɵtext(99, \"Last Name Country Frequency:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(100, \"input\", 36);\n        i0.ɵɵelementStart(101, \"div\", 4);\n        i0.ɵɵtext(102, \"Please enter the frequency of your last name in the country.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(103, \"div\", 1)(104, \"label\", 37);\n        i0.ɵɵtext(105, \"Last Name Country Rank:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(106, \"input\", 38);\n        i0.ɵɵelementStart(107, \"div\", 4);\n        i0.ɵɵtext(108, \"Please enter the rank of your last name in the country.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(109, \"div\", 1)(110, \"label\", 39);\n        i0.ɵɵtext(111, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(112, \"input\", 40);\n        i0.ɵɵelementStart(113, \"div\", 4);\n        i0.ɵɵtext(114, \"Please enter a password.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(115, \"div\", 1)(116, \"label\", 41);\n        i0.ɵɵtext(117, \"Primary Language:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(118, \"input\", 42);\n        i0.ɵɵelementStart(119, \"div\", 4);\n        i0.ɵɵtext(120, \"Please enter your primary language.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(121, \"div\", 1)(122, \"label\", 43);\n        i0.ɵɵtext(123, \"Primary Language Code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(124, \"input\", 44);\n        i0.ɵɵelementStart(125, \"div\", 4);\n        i0.ɵɵtext(126, \"Please enter the code for your primary language.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(127, \"div\", 1)(128, \"label\", 45);\n        i0.ɵɵtext(129, \"Salutation:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(130, \"input\", 46);\n        i0.ɵɵelementStart(131, \"div\", 4);\n        i0.ɵɵtext(132, \"Please enter your salutation.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(133, \"button\", 47);\n        i0.ɵɵtext(134, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.customerForm);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NumberValueAccessor],\n    styles: [\"input[_ngcontent-%COMP%]:invalid{border-color:red}\"]\n  });\n  return CustomerFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}